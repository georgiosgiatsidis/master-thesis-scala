version: "3"
services:
  spark-app:
    build: .
    image: spark-app:latest
    container_name: spark-app
    depends_on:
      - docker-mysql
      - redis
    environment:
      - SPARK_APPLICATION_MAIN_CLASS=com.giatsidis.spark.Main
      - SPARK_MASTER=spark://spark-master:7077
      - ENABLE_INIT_DAEMON=false
  spark-master:
    image: bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - ENABLE_INIT_DAEMON_STEP=false
  spark-worker-1:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - ENABLE_INIT_DAEMON_STEP=false
  spark-worker-2:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8083:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - ENABLE_INIT_DAEMON_STEP=false
  docker-mysql:
    image: mysql:5.7
    container_name: docker-mysql
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    ports:
      - "3307:3306"
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
      ]
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: thesis
      MYSQL_USER: root
  redis:
    image: redis
    container_name: redis
    ports:
      - "6380:6379"
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    hostname: zookeeper
    environment:
      SERVICE_NAME: zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:6.0.1
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    hostname: schema-registry
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:9092"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
networks:
  default:
    driver: bridge
volumes:
  db_data: {}
